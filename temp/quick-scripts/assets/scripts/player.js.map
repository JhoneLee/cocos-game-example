{"version":3,"sources":["player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","type","AudioClip","onLoad","jumpAction","setJumpAction","node","runAction","accLeft","accRight","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","start","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","update","dt","Math","abs","x","event","keyCode","macro","KEY","a","d","onDestroy","off"],"mappings":"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","file":"player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n        //角色跳跃高度\n        jumpHeight:0,\n        // 角色跳跃持续时间\n        jumpDuration:0,\n        // 最大移动速度\n        maxMoveSpeed:0,\n        // 加速度\n        accel:0,\n        // 音效\n        jumpAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        // 初始化跳跃动作\n        this.jumpAction = this.setJumpAction();\n        this.node.runAction(this.jumpAction);\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    start () {\n\n    },\n\n    setJumpAction () {\n        // 跳跃上升\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\n        // 下落\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\n        // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\n        var callback = cc.callFunc(this.playJumpSound, this);\n        // 不断重复\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\n    },\n\n    playJumpSound () {\n        // 调用声音引擎播放声音\n        cc.audioEngine.playEffect(this.jumpAudio, false);\n    },\n    update (dt) {\n        // 根据当前加速度方向每帧更新速度\n        if (this.accLeft) {\n            this.xSpeed -= this.accel * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.accel * dt;\n        }\n        // 限制主角的速度不能超过最大值\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\n            // if speed reach limit, use max speed with current direction\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\n        }\n\n        // 根据当前速度更新主角的位置\n        this.node.x += this.xSpeed * dt;\n    },\n    onKeyDown (event) {\n        // set a flag when key pressed\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n        }\n    },\n\n    onKeyUp (event) {\n        // unset a flag when key released\n        switch(event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n        }\n    },\n\n    onDestroy () {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n});\n"]}