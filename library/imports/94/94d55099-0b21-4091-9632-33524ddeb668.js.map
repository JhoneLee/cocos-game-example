{"version":3,"sources":["../../../../assets/scripts/assets/scripts/star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","start","onPicked","spawnNewStar","destroy","gainScore","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AAFJ,KAHP;AAOLC,qBAPK,+BAOgB;AACjB;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,eAAOJ,IAAP;AACH,KAbI;;AAcL;;AAEA;;AAEAK,SAlBK,mBAkBI,CAER,CApBI;AAsBLC,YAtBK,sBAsBO;AACR;AACA,aAAKT,IAAL,CAAUU,YAAV;AACA;AACA,aAAKN,IAAL,CAAUO,OAAV;AACA;AACA,aAAKX,IAAL,CAAUY,SAAV;AACH,KA7BI;AA+BLC,UA/BK,kBA+BGC,EA/BH,EA+BO;AACR;AACA,YAAIX,OAAO,KAAKL,iBAAL,EAAX;AACA,YAAKK,QAAQ,KAAKN,UAAlB,EAA8B;AAC1B;AACA,iBAAKY,QAAL;AACA;AACH,SAJD,MAIO,CACN;AACD,YAAIM,eAAe,IAAI,KAAKf,IAAL,CAAUgB,KAAV,GAAgB,KAAKhB,IAAL,CAAUiB,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKd,IAAL,CAAUe,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACH;AA3CI,CAAT","file":"star.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 星星和主角之间的距离小于这个数值时，就会完成收集\n        pickRadius: 0\n    },\n    getPlayerDistance () {\n        // 根据 player 节点位置判断距离\n        var playerPos = this.game.player.getPosition();\n        // 根据两点位置计算两点之间距离\n        var dist = this.node.position.sub(playerPos).mag();\n        return dist;\n    },\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start () {\n\n    },\n\n    onPicked () {\n        // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n        this.game.spawnNewStar();\n        // 然后销毁当前星星节点\n        this.node.destroy();\n        // 加分\n        this.game.gainScore();\n    },\n\n    update (dt) {\n        // 每帧判断和主角之间的距离是否小于收集距离\n        let dist = this.getPlayerDistance();\n        if ( dist <= this.pickRadius) {\n            // 调用收集行为\n            this.onPicked();\n            return;\n        } else {\n        }\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n    },\n});\n"]}